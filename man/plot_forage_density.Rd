% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kde_plot.R
\name{plot_forage_density}
\alias{plot_forage_density}
\title{Built in plotting function for Kernel density Raster.}
\usage{
plot_forage_density(
  kd_raster,
  basemap = TRUE,
  basemap_type = "osmgrayscale",
  trans_fill = TRUE,
  trans_type = "log10",
  axes_units = TRUE,
  scalebar = TRUE,
  scalebar_loc = "tl",
  north_arrow = TRUE,
  north_arrow_loc = "br",
  north_arrow_size = 0.75,
  wgs = TRUE,
  guide = TRUE,
  catchment = NULL,
  rivers = FALSE,
  add_hillshade = FALSE,
  plot_extent = NULL,
  attribute = TRUE,
  guide_width = NULL,
  mask_fill = "grey50"
)
}
\arguments{
\item{kd_raster}{Kernel Density raster generated from the \code{beavertools::forage_density()}}

\item{basemap}{Boolean, include an OSM basemap. (optional)}

\item{basemap_type}{Character vector for osm map type. for options see \code{rosm::osm.types()}}

\item{trans_fill}{Boolean to transform the colourmap - visualisation general better when TRUE (the default)}

\item{trans_type}{Character vector for the type of transform.}

\item{axes_units}{Boolean to include coordinate values on axis.}

\item{scalebar}{Boolean to include a scalebar.}

\item{scalebar_loc}{character vector for the scalebar location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow}{Boolean to include a north arrow}

\item{north_arrow_loc}{character vector for the arrow location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow_size}{numeric vector for the arrow}

\item{wgs}{Boolean to transform coordinate reference system (CRS) to WGS84 (EPSG:4326)}

\item{guide}{Boolean to include a legend}

\item{catchment}{An sf object or an sf-readable file. See sf::st_drivers() for available drivers.
This feature should be a boundary such as a catchment or Area of interest. It is used to mask the
map region outside of desired AOI.}

\item{rivers}{Boolean to include river lines (downloaded automatcally using the {osmdata} package) OR a river network of class
'sf' which can be generated beforehand using \code{beavertools::get_rivers()}.}

\item{add_hillshade}{Boolean to add an osm hillshade background map. This can be combined with 'basemap_type' to
create a textured basemap.}

\item{plot_extent}{'bbox', 'sf' or 'sp' object used to set the plot extent.}

\item{attribute}{Boolean to include an open street map attribution.}
}
\value{
ggplot object of Kernel Density Map
}
\description{
This function provides a simple way to produce consistent maps of Kernel density plots.
Please be aware that the 'basemap', 'rivers' and 'add_hillshade' arguments  use the following functions:
\code{rosm::osm.image()} \code{osmdata::opq()} which occasional fail during busy server times.
}
\examples{
# Here we filter the filter the built in 2019-2020 ROBT feeding sign data `RivOtter_FeedSigns`
# Then pipe this 'sf' object to forage_density.

ROBT_201920 <- RivOtter_FeedSigns \%>\%
dplyr::filter(SurveySeason == "2019 - 2020")\%>\%
  forage_density(., 'FeedCat')

# Now we plot the raster with plot_forage_density
beaver_forage <- plot_forage_density(ROBT_201920, catchment = Otter_catch, rivers = TRUE,
                                     plot_extent = target_ext, trans_fill=TRUE)

}
