% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_points.R
\name{plot_other_signs}
\alias{plot_other_signs}
\title{Plotting function for Confirmatory sign (Dwelling and Dam) locations.}
\usage{
plot_other_signs(
  beav_points,
  size = 2.5,
  fill_col = c("#e41a1c", "#4daf4a", "#d11141"),
  label = FALSE,
  basemap = TRUE,
  basemap_type = "osmgrayscale",
  axes_units = TRUE,
  scalebar = TRUE,
  scalebar_loc = "tl",
  north_arrow = TRUE,
  north_arrow_loc = "br",
  north_arrow_size = 0.75,
  wsg = FALSE,
  guide = TRUE,
  guide_pos = "bottom",
  seed = NA,
  drop_act = FALSE,
  trans_type = NULL,
  catchment = NULL,
  rivers = FALSE,
  add_hillshade = FALSE,
  plot_extent = NULL
)
}
\arguments{
\item{beav_points}{An 'sf' object containing the location of beaver dwellings and dams.
Alternative signs will be labelled as 'other'}

\item{size}{a numeric vector of length 1 denoting the point size to be used by {ggplot2}.}

\item{fill_col}{character vector of R colours or HEX codes.}

\item{label}{label activity areas with polygon ID.}

\item{basemap}{Boolean, include an OSM basemap. (optional)}

\item{basemap_type}{Character vector for osm map type. for options see \code{rosm::osm.types()}}

\item{axes_units}{Boolean to include coordinate values on axis.}

\item{scalebar}{Boolean to include a scalebar.}

\item{scalebar_loc}{character vector for the scalebar location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow}{Boolean to include a north arrow}

\item{north_arrow_loc}{character vector for the arrow location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow_size}{numeric vector for the arrow}

\item{wsg}{Boolean to transform coordinate reference system (CRS) to WGS84 (EPSG:4326)}

\item{guide}{Boolean to include a legend}

\item{guide_pos}{character vector describing the desired position of the guide c("left", "right", "bottom", "top")}

\item{seed}{numeric seed number -useful if using 'fill_name' = 'ID' as will set the same random colour palette.}

\item{drop_act}{Boolean to remove areas classified as 'activity' this creates a plot which shows only possibl
and confirmed territories}

\item{trans_type}{character - the transformation type to be used if fill_name=c('mean_fd', sum_fd').}

\item{catchment}{An sf object or an sf-readable file. See sf::st_drivers() for available drivers.
This feature should be a boundary such as a catchment or Area of interest. It is used to mask the
map region outside of desired AOI.}

\item{rivers}{Boolean to include river lines (downloaded automatcally using the {osmdata} package) OR a river network of class
'sf' which can be generated beforehand using \code{beavertools::get_rivers()}.}

\item{add_hillshade}{Boolean to add an osm hillshade background map. This can be combined with 'basemap_type' to
create a textured basemap.}

\item{plot_extent}{'bbox', 'sf' or 'sp' object defining the desired plot extent.}
}
\value{
ggplot object of a confirmatory signs map.
}
\description{
function to create a ggplot for the feeding points or confirmatory signs. This is just a lazy wrapper for
\code{beavertools::plot_territories} but tidies things up a bit. It is not exaustive and
}
\examples{
# Here we filter the filter the built in 2019-2020 ROBT confirmatory sign data `RivOtter_OtherSigns`
# Then pipe this 'sf' object to plot_feeding.

RivOtter_OtherSigns \%>\%
dplyr::filter(SurveySeason == "2019 - 2020") \%>\%
  plot_other_signs(., size = 1.5,basemap=T, catchment = Otter_catch,
                   rivers = T, plot_extent = target_ext)

}
