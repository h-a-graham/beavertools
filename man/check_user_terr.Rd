% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terr_plot.R
\name{check_user_terr}
\alias{check_user_terr}
\title{Built in plotting function to check user-corrected territory class assignment.}
\usage{
check_user_terr(
  terr_poly,
  fill_col = c("#7EAAC7", "#F87223", "#61E265"),
  label = TRUE,
  basemap = FALSE,
  basemap_type = "osmgrayscale",
  axes_units = TRUE,
  scalebar = TRUE,
  scalebar_loc = "tl",
  north_arrow = TRUE,
  north_arrow_loc = "br",
  north_arrow_size = 0.75,
  wsg = FALSE,
  guide = TRUE,
  plot_extent
)
}
\arguments{
\item{terr_poly}{a territory polygon created using \code{beavertools::estimate_territories()}}

\item{fill_col}{character vector of R colours or HEX codes.}

\item{label}{label activity areas with polygon ID. important when checking the predicted classification}

\item{basemap}{Boolean, include an OSM basemap. (optional)}

\item{basemap_type}{Character vector for osm map type. for options see \code{rosm::osm.types()}}

\item{axes_units}{Boolean to include coordinate values on axis.}

\item{scalebar}{Boolean to include a scalebar.}

\item{scalebar_loc}{character vector for the scalebar location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow}{Boolean to include a north arrow}

\item{north_arrow_loc}{character vector for the arrow location one of:'tl', 'bl', 'tr', 'br' Meaning "top left" etc.}

\item{north_arrow_size}{numeric vector for the arrow}

\item{wsg}{Boolean to transform coordinate reference system (CRS) to WGS84 (EPSG:4326)}

\item{guide}{Boolean to include a legend}

\item{plot_extent}{'bbox', 'sf' or 'sp' object defining the desired plot extent.}
}
\value{
ggplot object of the territory check map.
}
\description{
Function to plot the user-corrected territory classes from: \code{beavertools::user_classify()}
}
\examples{
# Here we filter the filter the built in 2019-2020 ROBT feeding sign data `RivOtter_FeedSigns`
# Then pipe this 'sf' object to forage_density.

ROBT_201920 <- RivOtter_FeedSigns \%>\%
dplyr::filter(SurveySeason == "2019 - 2020")\%>\%
  forage_density(., 'FeedCat')

# Now we load the ROBT `RivOtter_OtherSigns` dataset and filter to the same
# year as the forage density raster.

CS_201920 <- RivOtter_OtherSigns \%>\%
dplyr::filter(SurveySeason == "2019 - 2020")

# run territory classification
otter_poly <- estimate_territories(ROBT_201920, confirm_signs = CS_201920)

# create the map for checking automated territory classification
otter_poly_uc <- user_classify(otter_poly, territory = c(10, 28))

# generate the user territory check plot.
check_user_terr(otter_poly_uc, basemap=FALSE)

}
