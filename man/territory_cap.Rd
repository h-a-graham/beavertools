% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/territory_cap.R
\name{territory_cap}
\alias{territory_cap}
\title{Beaver territory capacity simulation}
\usage{
territory_cap(
  territories,
  min_veg = 2.5,
  min_bdc = 1,
  progbars = TRUE,
  multicore = FALSE,
  ncores
)
}
\arguments{
\item{territories}{The potential terrtory areas produced using \code{beavertools::gen_territories()}}

\item{min_veg}{Numeric vector describing the minimum vegetation index value which can support a beaver territory.}

\item{min_bdc}{Numeric vector describing the minimum Beaver Dam Capacity for reaches where Stream Order <=4.}

\item{multicore}{Boolean to multiple core - This function can be slow for large catchments so setting as TRUE can speed things up.}

\item{ncores}{numeric denoting the number of processes to run the function across. If not included, defaults to:
\code{parallel::detectCores()[1]-2}}

\item{progbar}{Boolean to use a progress bar to monitor progress}
}
\value{
An 'sf' object containing all viable territories, the total of which equals the territory capacity.
}
\description{
Function to estimate the territory capacity of a catchment for beavers. The potential territories are iteratively compared
to select the most suitable habitats that do not intersect. Stream size and habitat quality are prioritised such that terrtories
in larger rivers with better habitat are considered more suitable.
}
\examples{
\dontrun{
# --- Subset dataset for example to reduce computation time ---
BeavNetOtter <- RivOtter_BeaverNet[RivOtter_BeaverNet$Str_order > 3,]

# ---------- run terriroty generation --------
poss_terrs <-  gen_territories(BeavNetOtter)

# ------------- Run territory cap -------------
territory_cap(poss_terrs, multicore = TRUE)
}

}
