test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
devtools::load_all()
devtools::document()
t1 <- Sys.time()
test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
?foreach::`%dopar%`
devtools::document()
devtools::document()
devtools::load_all()
t1 <- Sys.time()
test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
devtools::document()
?@rdname
devtools::document()
devtools::load_all()
t1 <- Sys.time()
test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
rep(BeavNetOtter, 2)
list(BeavNetOtter)
rep(list(BeavNetOtter), 2)
devtools::load_all()
t1 <- Sys.time()
test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
devtools::load_all()
parallel::stopCluster(cl)
# ------------ imports --------------------
devtools::install()
library(tidyverse)
library(sf)
library(broom)
devtools::document()
devtools::load_all()
# ------------ Read Data ------------------
# This is the high res version of the Beaver Network and cannot be released with the package due to
# licensing issues. When we produce the OPen BeaverNetwork the network for the R. Otter will be included as
# a built in dataset.
BeavNetOtter <- sf::read_sf('run/data/BeaverNetwork_Otter.gpkg')
# ---------- Subset dataset for now - > 1st order streams only -----------
# BeavNetOtter <- BeavNetOtter[BeavNetOtter$Str_order > 1,]
BeavNetOtter <- BeavNetOtter[BeavNetOtter$Str_order > 3,]
# ---------- run terriroty generation for all reaches
t1 <- Sys.time()
test_out <-  gen_territories(BeavNetOtter)
Sys.time()-t1
# sf::st_write(sf::st_buffer(test_out, 10), 'QGIS/To_test/All_terr_3.gpkg', driver=, "GPKG", append=FALSE, overwrite=T)
# ------------- Run territory cap -------------
t1 <- Sys.time()
test_TC_par <-territory_cap(test_out, min_veg = 2.5 , multicore = TRUE)
Sys.time()-t1
ggplot(test_TC[test_TC$Str_Ord<5,], aes(x=BDC))+
geom_histogram()
ggplot(test_TC_par[test_TC_par$Str_Ord<5,], aes(x=BDC))+
geom_histogram()
ggplot(test_TC_par, aes(x=BFI_40m))+
geom_histogram(bins=10)
ggplot(test_TC_par, aes(x=Terr_Leng))+
geom_histogram()
# simulation to test different stream resolutions (all streams, >1st order, >2nd order)
multi_sim <- function(.net, .name){
sim_terr <- sim_terr_cap(.net, n_p_terr_sim=5, n_hab_sim=6, min_veg = c(1.3, 1.8)) %>%
dplyr::mutate(sim_name = .name)
}
BeavNetOtter_all <- sf::read_sf('run/data/BeaverNetwork_Otter.gpkg')
BeavNetOtter1 <- BeavNetOtter_all[BeavNetOtter_all$Str_order > 1,]
BeavNetOtter2 <- BeavNetOtter_all[BeavNetOtter_all$Str_order > 2,]
riv_nets <- list(BeavNetOtter_all, BeavNetOtter1, BeavNetOtter2)
sim_names <- c('All reaches', '> 1st', '> 2nd')
t1 <- Sys.time()
big_sim <- purrr::map2(.x = riv_nets, .y = sim_names, ~ multi_sim(.net = .x, .name = .y)) %>%
bind_rows()
Sys.time()-t1
ggplot(big_sim, aes(x=min_BFI, y = n, colour = sim_name, group=sim_name)) +
geom_point()+
geom_smooth()
LmMod <- lm(n ~ min_BFI, data =sim_terr) # this is better for >1sr order 1.3:2 BHI
write_rds(sim_terr, './run/exports/simterr2.rds')
write_rds(big_sim, './run/exports/simterr2.rds')
sim_terrL <- big_sim('./run/exports/simterr2.rds')
sim_terrL <- read_rds('./run/exports/simterr2.rds')
#
LmMod <- lm(n ~ min_BFI, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
PolyMod <- lm(n ~ poly(min_BFI,2), data =sim_terrL) # but this is better (depending on scenario)
big_sim %>%
group_by(sim_name) %>%
broom::augment(LmMod,data=sim_terr, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terr, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
ggsave(filename = 'run/exports/full_sim10_16.jpg')
big_sim %>%
group_by(sim_name) %>%
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terr, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=sim_terrL, interval = 'prediction')
big_sim %>%
group_by(sim_name) %>%
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terr, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
sim_terrL
#
LmMod <- lm(n ~ min_BFI*sim_name, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terr, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
big_sim
#
LmMod <- lm(n ~ min_BFI*sim_name, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
#
LmMod <- lm(n ~ min_BFI, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
#
LmMod <- lm(n ~ min_BFI + sim_names, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
#
LmMod <- lm(n ~ min_BFI + sim_name, data =sim_terrL) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7)
#
LmMod <- lm(n ~ min_BFI + sim_name, data =big_sim) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=sim_terrL, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=sim_terrL, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
#
LmMod <- lm(n ~ min_BFI * sim_name, data =big_sim) # this is better for >1sr order 1.3:2 BHI
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name, fill=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name, fill=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2)
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name, fill=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'dark')
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6, colour='#d95f02') +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.6) +
geom_line(lwd=0.8, alpha=0.7) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2')+
scale_fill_brewer(palette = 'Dark2')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', label = Stream Order)+
theme_bw()
?scale_color_brewer
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2')+
guides(colour='Stream Order')
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
ggsave(filename = 'run/exports/full_sim5_10.jpg')
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='>1st') +
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='>1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(data=big_sim, aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='> 1st')
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(PolyMod,data=big_sim, interval = 'prediction') %>%
filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(PolyMod,data=big_sim, interval = 'prediction') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(PolyMod,data=big_sim, interval = 'confidence') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
PolyMod <- lm(n ~ poly(min_BFI, 2) * sim_name, data =big_sim) # but this is better (depending on scenario)
broom::augment(PolyMod,data=big_sim, interval = 'confidence') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(PolyMod,data=big_sim, interval = 'prediction') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
tidy(lmMod)
tidy(LmMod)
summary(LmMod)
tidy(PolyMod)
broom::augment(LmMod,data=big_sim, interval = 'prediction') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
broom::augment(PolyMod,data=big_sim, interval = 'prediction') %>%
# filter(sim_name=='> 1st') %>%
ggplot(., aes(x=min_BFI, y = .fitted, colour=sim_name)) +
geom_point(aes(x=min_BFI, y = n),alpha=0.8) +
geom_line(lwd=0.8, alpha=0.8) +
geom_line(aes(y=.lower),  linetype=2) +
geom_line(aes(y=.upper),  linetype=2) +
geom_ribbon(aes(ymin = .lower, ymax = .upper, group=sim_name), alpha = 0.3, fill='#BACAD1', colour=NA) +
labs(x = 'minimum BFI value', y = 'n territories')+
scale_color_brewer(palette = 'Dark2', name = 'stream order')+
theme_bw()
# ----- get minimum observed BFI vals from territories.
# generate KDE rasters for all survey periods
kde_ras_list <- RivOtter_FeedSigns %>%
group_by(SurveySeason) %>%
group_split()%>%
purrr::map(., ~forage_density(., 'FeedCat', kd_extent = ras_ext))
# ----- get minimum observed BFI vals from territories.
ras_ext <- inflate_bbox(RivOtter_FeedSigns, 250)
# generate KDE rasters for all survey periods
kde_ras_list <- RivOtter_FeedSigns %>%
group_by(SurveySeason) %>%
group_split()%>%
purrr::map(., ~forage_density(., 'FeedCat', kd_extent = ras_ext))
# generate list of confirmatory sign tibbles - split by survey season
Otter_confirm_list <- RivOtter_OtherSigns %>%
group_by(SurveySeason) %>%
group_split()
# generate list of sf objects with estimated territory locations/status
auto_terr_list <- kde_ras_list %>%
purrr::map2(.x = ., .y= Otter_confirm_list,
.f = ~ estimate_territories(.x, .y))
minBFI <- function(x, .var, .conf){
if (.conf == 'Possible'){
x <- x %>%
filter(terr_status != 'Activity')
} else if (.conf == 'Territory'){
x <- x %>%
filter(terr_status == 'Territory')
} else {
message('All areas of activity considered - are you sure??')
}
x %>%
sf::st_intersection(BeavNetOtter) %>%
dplyr::mutate(Leng = as.numeric(sf::st_length(.))) %>%
dplyr::group_by(id) %>%
dplyr::summarise(across(c("BFI_40m", "BDC"), ~ weighted.mean(.x, w= Leng, na.rm = TRUE))) %>%
ungroup()%>%
select(!! dplyr::sym(.var)) %>%
st_drop_geometry() %>%
min()
}
min_Poss_BFIs <- auto_terr_list %>%
purrr::map(., ~ minBFI(., .var = 'BFI_40m', 'Possible')) %>%
unlist()
min_Terr_BFIs <- auto_terr_list %>%
purrr::map(., ~ minBFI(., .var = 'BFI_40m', 'Territory')) %>%
unlist()
min_Poss_BFIs
min_Terr_BFIs
seq(from=1.5, to = 1.5, length.out=1)
c(1.5)[2]
c(1.5)[1]
