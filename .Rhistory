theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, fill=sim, after_stat(count))) +
# geom_histogram(bins=50) +
geom_density( fill=NA) +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_fill_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, colour=sim, after_stat(count))) +
geom_density( fill=NA) +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_colour_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, colour=sim, after_stat(count))) +
geom_density() +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_colour_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, fill=sim, colour=sim, after_stat(count))) +
geom_density(alpha=0.5) +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_colour_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, fill=sim, colour=sim, after_stat(count))) +
geom_density(alpha=0.5) +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_fill_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, fill=sim, after_stat(count))) +
geom_density(alpha=0.5) +
labs(x='territory length (m)', colour='minimum BFI threshold') +
scale_fill_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
ggplot(Terr_Cap_df, aes(x=Terr_Leng, fill=sim, after_stat(count))) +
geom_density(alpha=0.5) +
labs(x='territory length (m)', fill='minimum BFI threshold') +
scale_fill_brewer(palette = "Dark2")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(filename = file.path(plot_dir, 'TerritoryLengthDist.jpg'), dpi=300, height=7, width=7)
Terr_Cap_df %>%
sf::st_drop_geometry()%>%
group_by(sim) %>%
summarise(mean_length = mean(Terr_Leng),
stdev_Length = sd(Terr_Leng))
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(ORN_cap, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = ORN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)
p2 <- plot_capacity(MMRN_cap, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=7, width=10)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(ORN_cap, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)
p2 <- plot_capacity(MMRN_cap, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=7, width=10)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=7, width=10)
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=14, width=15)
# summary stats for territory length if needed
Terr_Cap_df %>%
sf::st_drop_geometry()%>%
group_by(sim) %>%
summarise(mean_length = mean(Terr_Leng),
stdev_Length = sd(Terr_Leng),
n_terrs = n())
# summary stats for territory length if needed
Terr_sum_df <- Terr_Cap_df %>%
sf::st_drop_geometry()%>%
group_by(sim) %>%
summarise(mean_length = mean(Terr_Leng),
stdev_Length = sd(Terr_Leng),
n_terrs = n())
plot_capacity(terr_cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = T) %>%
#   ggsave(filename = file.path(plot_dir, 'OSMM_3_5.jpg'),plot = ., dpi=300, height=7, width=5)
#
#
# sf::st_write(sf::st_buffer(test_TC_par, 50), 'QGIS/To_test/terr_sim_1kmCont.gpkg', driver=, "GPKG", append=FALSE, overwrite=T)
# ------- Run Territory simulation based on the desired upper and lower  minimum BFI requirements. -----------
t1 <- Sys.time()
plot_capacity(terr_cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = T)
plot_capacity(terr_cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = T) +
annotate("text", x = 305000, y = 115000, label = sprintf('n territories = %s', upper_BFI))
plot_capacity(terr_cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = T) +
annotate("text", x = 310000, y = 115000, label = sprintf('n territories = %s', upper_BFI))
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 310000, y = 115000, label = sprintf('n territories = %s', lower_BFI))
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 310000, y = 115000, label = sprintf('n territories = %s', upper_BFI))
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=8, width=11)
Terr_sum_df$n_terrs[Terr_sum_df$sim = as.character(lower_BFI)]
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 310000, y = 115000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 310000, y = 115000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 115000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 115000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) %>%
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'),plot = ., dpi=300, height=9, width=11)
# What is the capacity of the catchment? WILL NEED UPDATING WITH RANGES ETC WHEN SIMULATIONS ARE DONE.
cap_limits <- read_rds(file.path(export_dir, 'sim_terr.Rds')) %>%
sf::st_drop_geometry() %>%
summarise(lowest = min(n),
highest = max(n))
lower_capacity = cap_limits$lowest
upper_capacity = cap_limits$highest
upper_capacity
lower_capacity
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 81000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 81000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) +
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), dpi=300, height=9, width=11)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) +
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), dpi=300, height=9, width=11)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI) +
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.png'), dpi=300, height=9, width=11)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, \n
OS data © Crown copyright and database right 2021'
)
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=8, width=11)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: © OpenStreetMap contributors, OS data © Crown copyright and database right 2021'
)
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=8, width=11)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=8, width=10)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 81500, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021' #© OpenStreetMap contributors,
)
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=8, width=10)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 81800, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 81800, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021' #© OpenStreetMap contributors,
)
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=8, width=10)
TerrCapPlot
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021' #© OpenStreetMap contributors,
)
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
TerrCapPlot
?plot_annotation
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021', #© OpenStreetMap contributors,
theme = theme(plot.caption = element_text(size = 9)))
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
TerrCapPlot
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=7, width=10.5)
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 0.8,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 0.8,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021', #© OpenStreetMap contributors,
theme = theme(plot.caption = element_text(size = 9)))
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
TerrCapPlot
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 8,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 8,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021', #© OpenStreetMap contributors,
theme = theme(plot.caption = element_text(size = 9)))
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
TerrCapPlot
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 1.5,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 305000, y = 82000, size = 1.5,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021', #© OpenStreetMap contributors,
theme = theme(plot.caption = element_text(size = 9)))
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
TerrCapPlot
capacity_plot <- function(cap_lowBFI, cap_uppBFI){
p1 <- plot_capacity(cap_lowBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, north_arrow = F,
scalebar = F, axes_units = F)+
annotate("text", x = 304000, y = 82000, size = 1.5,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(lower_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2 <- plot_capacity(cap_uppBFI, buffer=50, basemap = F, catchment = RivOtter_Catch_Area,
river_net = MMRN_BeavNetOtter, plot_extent = target_ext, axes_units = F)+
annotate("text", x = 304000, y = 82000, size = 1.5,
label = sprintf('n territories = %s',
Terr_sum_df$n_terrs[Terr_sum_df$sim == as.character(upper_BFI)]))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3 <- p1 + p2 + plot_annotation(
caption = 'Contains: OS data © Crown copyright and database right 2021', #© OpenStreetMap contributors,
theme = theme(plot.caption = element_text(size = 8)))
return(p3)
}
TerrCapPlot <- capacity_plot(terr_cap_lowBFI, terr_cap_uppBFI)
ggsave(filename = file.path(plot_dir, 'Lower_Upper_Capacity_maps.jpg'), plot=TerrCapPlot, dpi=300, height=7, width=9.5)
t1 <- Sys.time()
sim_terr <- sim_terr_cap(MMRN_BeavNetOtter, n_p_terr_sim=100, n_hab_sim=2, min_veg = c(lower_BFI, upper_BFI))
saveRDS(sim_terr, file.path(export_dir, 'sim_terr.Rds'))
Sys.time()-t1
# plot simulation results... load again if needed.
# sim_terr <- read_rds(file.path(export_dir, 'sim_terr.Rds'))
sim_terr %>%
mutate(min_BFI_c = as.character(min_BFI)) %>%
ggplot(., aes(x=min_BFI_c, y=n, fill=min_BFI_c)) +
geom_point(shape = 21, alpha = 0.7,position = position_jitterdodge(
jitter.width = 0.1), stroke = 0.5,show.legend = F) +
geom_boxplot(show.legend = F, alpha=0.5, width=0.3, outlier.shape =NA) +
scale_fill_brewer(palette = "Dark2", ) +
coord_cartesian(y=c(100,200))+
labs(y= "n territories", x = 'Beaver Forage Index (BFI) Value') +
theme_bw() +
ggsave(filename = file.path(plot_dir, 'SimulationResults1.jpg'), dpi=300, height=7, width=7)
# quick summary to retrieve the highest and lowest possible capacity values.
sim_terr %>%
sf::st_drop_geometry() %>%
summarise(lowest = min(n),
highest = max(n))
