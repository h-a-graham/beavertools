stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_light()+
# theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_minimal()+
# theme_light()+
# theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
# theme_minimal()+
theme_classic()+
# theme_light()+
# theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
# theme_minimal()+
# theme_classic()+
theme_light()+
# theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_minimal()+
# theme_classic()+
# theme_light()+
# theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
?forage_density
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=4, lwd=0.3)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=4, lwd=0.3)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.3, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_preds.png'),
dpi=300, height=7, width=7)
library(patchwork)
library(sf)
library(magrittr)
library(tidyverse)
library(patchwork)
library(ggfortify)
devtools::load_all()
#----- Define some directories -----------------
plot_dir <- file.path(here::here(),"R_Otter_workflow/3_Pop_expansion_predictions/plots")
# ---- Read in Data Territroy count data --------------
reclass_terr_list <- readRDS(file='R_Otter_workflow/1_Feed_Sign_Mapping/exports/reclass_terr_list.Rds')
# get unique names for survey years...
plot_names <- unique(RivOtter_FeedSigns$SurveySeason)
# What is the capacity of the catchment? WILL NEED UPDATING WITH RANGES ETC WHEN SIMULATIONS ARE DONE.
lower_capacity = 150
upper_capacity = 190
#  ------- set up dataframe for observed territory counts... -------
date_list <- lubridate::dmy(c("30-12-2014", "30-12-2015", "30-12-2016",
"30-12-2017", "30-12-2018", "30-12-2019"))
years_since_release <- c(7:12)
get_terr_counts <- function(terr_map, .season, .year, .ysr){
terr_map %>%
dplyr::filter(user_class == 'Territory') %>%
summarise(terr_count = n(), season= .season, year = .year, years_since = .ysr)
}
count_obj_list <- list(reclass_terr_list, plot_names, date_list, years_since_release)
terr_counts <-  purrr::pmap(count_obj_list, ~get_terr_counts(..1, ..2, ..3, ..4)) %>%
bind_rows() %>%
mutate(year_adj = years_since + 2007)
# --- fit log glm model to determine the fit up to 50% capacity ----------
.logmodel <- glm(terr_count ~ years_since, family=poisson(link='log'), data=terr_counts)
## ----- uncomment for model diagnosticss. -------
# autoplot(.logmodel, which = 1:6, label.size = 3)
# summary(.logmodel)
# broom::tidy(.logmodel, exponentiate=T, conf.int=T)
# ----- functions to fit sigmoidal growth model -------
# get half capacity prediction date...
HalfCap <- function(cap){
yearsVal <- tibble(years_since = seq(0,50, by=0.01)) %>%
broom::augment(.logmodel, newdata=., se_fit=T, type.predict = "response",
type.residuals = "deviance") %>%
mutate(.fitround = floor(.fitted)) %>%
filter(.fitround==round(cap/2)) %>%
pull(years_since)
yearsVal[1]
}
#create new df with anchor points.
hacked_df_func <- function(cap){
terr_counts %>%
sf::st_drop_geometry() %>%
bind_rows(tibble(terr_count=round(cap), season="Full Cap",
years_since=HalfCap(cap) * 2, year_adj=years_since + 2007))%>%
bind_rows(tibble(terr_count=round(cap), season="Future Full Cap",
years_since=HalfCap(cap) * 2 + 50, year_adj=years_since + 2007))
}
# function to fit new spline
fit_n_predict <- function(df, cap){
# fit new model
.splinemod <- glm(terr_count ~ splines::ns(years_since,df=1, knots=c(HalfCap(cap)),
Boundary.knots=c(0, HalfCap(cap)*2)),
family=poisson(link='log'), data=df)
# create new data with predictions
new_data <- tibble(years_since = seq(0,50, by=0.1)) %>%
broom::augment(.splinemod, newdata=., se_fit=T, type.predict = "response",
type.residuals = "deviance") %>%
mutate(conf.low = .fitted - (.se.fit*1.96),
conf.high = .fitted + (.se.fit*1.96)) %>%
mutate(.fitted = ifelse(.fitted>cap, cap, .fitted),
conf.low = ifelse(conf.low < 0, 0, conf.low),
conf.high = ifelse(conf.high > cap, cap, conf.high),
year_adj = years_since + 2007,
cap_name = cap)
}
model_capacity <- function(cap_val){
hacked_df_func(cap_val) %>%
fit_n_predict(., cap_val)
}
hacked_df <-  seq(lower_capacity, upper_capacity, by=1) %>%
purrr::map(., ~model_capacity(.)) %>%
bind_rows()
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_predsV2.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F, alpha=0.7)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_predsV2.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F, alpha=0.5)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_predsV2.png'),
dpi=300, height=7, width=7)
hacked_df %>%
ggplot(., aes(x=year_adj, y=.fitted))+
geom_hline(yintercept=lower_capacity, linetype=1, lwd=0.1)+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, group=cap_name),
alpha=0.04, lwd=NA, fill="#7570b3") +
stat_summary(aes(y=conf.high),fun = max, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(aes(y=conf.low),fun = min, geom = 'line', size=0.1, alpha=0.6, linetype=2, color="grey20") +
stat_summary(fun = mean, geom = 'line', size=0.6, alpha=0.6, linetype=1, color="grey20") +
geom_point(data=terr_counts, aes(x=year_adj, y=terr_count), inherit.aes = F, alpha=0.6)+
annotate("text", x=2015, y = lower_capacity + 5, label = "min predicted territory capacity", size=3) +
annotate("text", x=2015, y = upper_capacity + 5, label = "max predicted territory capacity", size=3) +
geom_hline(yintercept=upper_capacity, linetype=1, lwd=0.1)+
coord_cartesian(ylim=c(0,upper_capacity +10), xlim = c(2007, 2050))+
labs(x = 'year', y="n territories", subtitle="Beaver territory expansion in R. Otter Catchment???")+
theme_bw() +
theme(legend.position = "bottom") +
ggsave(file.path(plot_dir, 'MM_predsV2.png'),
dpi=300, height=7, width=7)
MMRN_pot_terr2_5 <- MMRN_pot_terr
# ------------ imports --------------------
devtools::load_all()
# devtools::uninstall()
devtools::install()
export_dir <- file.path(here::here(),"R_Otter_workflow/2_Territory_simulations/exports")
plot_dir <- file.path(here::here(),"R_Otter_workflow/2_Territory_simulations/plots")
# ----- generate extent and titles for mapping ------
target_ext <- inflate_bbox(RivOtter_Catch_Area, 10)
# ------------ Read Data ------------------
Real_terrs <- readRDS('R_Otter_workflow/1_Feed_Sign_Mapping/exports/reclass_terr_list.Rds')
# MasterMap River Network not released with the package due to licensing issues.
MMRN_BeavNetOtter <- sf::read_sf('run/data/BeaverNetwork_Otter.gpkg') # MasterMap Data
# OS Open Rivers Network - included with the package
ORN_BeavNetOtter <- RivOtter_BeaverNet
# ---------- run terriroty generation for all reaches for each network
run_terr_gen <- function(riv_network, overwrite=FALSE, save_out=TRUE){
fileName <- file.path(export_dir, paste('PT_', deparse(substitute(riv_network)),'.Rds', sep=""))
# print(fileName)
if (file.exists(fileName) && isFALSE(overwrite)){
message(sprintf("Potential territrories created in: %s", fileName))
message("Loading previously generated file...")
terr_out <- readRDS(fileName)
} else{
t1 <- Sys.time()
terr_out <-  gen_territories(riv_network, multicore = T, progbar = T)
if (isTRUE(save_out)){
saveRDS(terr_out, file=fileName)
}
message(sprintf('Potential Territory Generation Run Time = %s minutes', round(Sys.time()-t1,1)))
}
return(terr_out)
}
ORN_BeavNetOtterNEW <- ORN_BeavNetOtter
MMRN_BeavNetOtterNEW <-MMRN_BeavNetOtter
ORN_pot_terr <- run_terr_gen(ORN_BeavNetOtterNEW)
MMRN_pot_terr <- run_terr_gen(MMRN_BeavNetOtterNEW)
ggplot(MMRN_pot_terr, aes(x=Terr_Leng))+
geom_density()
# v1 <- tibble(vals =  rnorm(1000, 1630, 293), func = 'rnorm')
# v2 <- tibble(vals =  runif(1000, min = 1630-293, max = 1630+293), func = 'runif')
# v3 <- bind_rows(v1, v2)
# ggplot(v3, aes(x=vals, fill=func)) +
#   geom_histogram()
# ------------- Run territory cap -------------
run_terr_cap <- function(pot_terrs, veg, overwrite=FALSE, save_out=TRUE){
fileName <- file.path(export_dir, paste('TC_', deparse(substitute(pot_terrs)),'.Rds', sep=""))
# print(fileName)
if (file.exists(fileName) && isFALSE(overwrite)){
message(sprintf("Territory capacity created in: %s", fileName))
message("Loading previously generated file...")
cap_out <- readRDS(fileName)
} else {
t1 <- Sys.time()
cap_out <-territory_cap(pot_terrs, min_veg = veg , multicore = TRUE)
if (isTRUE(save_out)){
saveRDS(cap_out, file=fileName)
}
message(sprintf('Territory Capacity Run Time = %s minutes', round(Sys.time()-t1,1)))
}
return(cap_out)
}
ORN_pot_terrNEW <-ORN_pot_terr
MMRN_pot_terr2_5 <- MMRN_pot_terr
ORN_terr_cap <- run_terr_cap(ORN_pot_terrNEW, 1.5, overwrite = T)
ORN_terr_cap <- run_terr_cap(ORN_pot_terrNEW, 1.5)
ORN_terr_cap
MMRN_terr_cap <- run_terr_cap(MMRN_pot_terr2_5, 2.5)
# ORN_terr_cap <- run_terr_cap(ORN_pot_terrNEW, 1.5)
MMRN_terr_cap <- run_terr_cap(MMRN_pot_terr2_5, 2.5, overwrite = T)
# devtools::uninstall()
devtools::install()
# devtools::uninstall()
devtools::install()
# devtools::uninstall()
devtools::install()
library(tidyverse)
library(sf)
library(broom)
library(patchwork)
library(beavertools)
#-------------define folder root -------------
export_dir <- file.path(here::here(),"R_Otter_workflow/2_Territory_simulations/exports")
plot_dir <- file.path(here::here(),"R_Otter_workflow/2_Territory_simulations/plots")
# ----- generate extent and titles for mapping ------
target_ext <- inflate_bbox(RivOtter_Catch_Area, 10)
terr_list <- readRDS(file=file.path(here::here(),'R_Otter_workflow/1_Feed_Sign_Mapping/exports/reclass_terr_list.Rds'))
survey_years <- unique(RivOtter_FeedSigns$SurveySeason)
source(file.path(here::here(), 'R_Otter_workflow/2_Territory_simulations/terr_BFI_df.R'))
Terr_df <- terr_BFI_df(terr_list, MMRN_BeavNetOtter, survey_years)
lower_BFI <- round(min(Terr_df$mean_BFI_40m),1)
upper_BFI <- round(mean(Terr_df$mean_BFI_40m), 1)
# MasterMap River Network not released with the package due to licensing issues.
MMRN_BeavNetOtter <- sf::read_sf('run/data/BeaverNetwork_Otter.gpkg') # MasterMap Data
# OS Open Rivers Network - included with the package
ORN_BeavNetOtter <- RivOtter_BeaverNet
Terr_df <- terr_BFI_df(terr_list, MMRN_BeavNetOtter, survey_years)
lower_BFI <- round(min(Terr_df$mean_BFI_40m),1)
upper_BFI <- round(mean(Terr_df$mean_BFI_40m), 1)
sim_terr <- sim_terr_cap(ORN_BeavNetOtter, n_p_terr_sim=2, n_hab_sim=2, min_veg = c(lower_BFI, upper_BFI))
sim_terr
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=min_BFI)) +
geom_boxplot()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=min_BFI, groups=min_BFI)) +
geom_boxplot()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=min_BFI, group=min_BFI)) +
geom_boxplot()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot() +
scale_color_brewer(palette = "Dark2") +
theme_bw()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2") +
theme_bw()
?scale_fill_brewer
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2", ) +
guides(fill = NA)
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot() +
scale_fill_brewer(palette = "Dark2", ) +
guides(fill = NULL) +
theme_bw()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_boxplot(show.legend = F) +
scale_fill_brewer(palette = "Dark2", ) +
theme_bw()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_point(shape = 21, alpha = 0.5,position = position_jitterdodge(), stroke = 0.1) +
geom_boxplot(show.legend = F) +
scale_fill_brewer(palette = "Dark2", ) +
theme_bw()
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_point(shape = 21, alpha = 0.5,position = position_jitterdodge(), stroke = 0.1,show.legend = F) +
geom_boxplot(show.legend = F) +
scale_fill_brewer(palette = "Dark2", ) +
theme_bw()
10*25
250/60
t1 <- Sys.time()
sim_terr <- sim_terr_cap(MMRN_BeavNetOtter, n_p_terr_sim=10, n_hab_sim=2, min_veg = c(lower_BFI, upper_BFI))
Sys.time()-t1
ggplot(sim_terr, aes(x=min_BFI, y=n, fill=as.factor(min_BFI), group=min_BFI)) +
geom_point(shape = 21, alpha = 0.5,position = position_jitterdodge(), stroke = 0.1,show.legend = F) +
geom_boxplot(show.legend = F) +
scale_fill_brewer(palette = "Dark2", ) +
theme_bw()
ggsave('sim1.jpg')
saveRDS(sim_terr, 'sim_terr.Rds')
