# library(raster)
# library(ggspatial)
# library(gridExtra)
library(magrittr)
library(tidyverse)
devtools::load_all()
devtools::document()
ROBT_201920 <- RivOtter_FeedSigns %>%
dplyr::filter(SurveySeason == "2019 - 2020")
out_ras <- forage_density(ROBT_201920, 'FeedCat')
# out_ras <- forage_density(ROBT_201920, 'FeedCat', grid_size = 25, kern_bw = 100, kd_weights = c(1, 1e+03, 1e+06),
# low_thresh = 1e-12)
beaver_forage <- plot_forage_density(out_ras)
beaver_forage
rasmin <- raster::minValue(out_ras)
q05 <- raster::quantile(out_ras, .05)
q25 <- raster::quantile(out_ras, .25)
q50 <- raster::quantile(out_ras, .5)
q75 <- raster::quantile(out_ras, .75)
q95 <- raster::quantile(out_ras, .95)
polygonise <- function(ras, thresh){
rasvec <- as.vector(ras)
rasvec <- rasvec[!is.na(rasvec)]
f <- ecdf(rasvec)
perc <- plyr::round_any(f(thresh), 0.05, f = round)
raster::rasterToPolygons(ras, fun=function(x){x>thresh}) %>%
sf::st_as_sf() %>%
sf::st_union() %>%
sf::st_as_sf() %>%
mutate(quant = perc)
}
otter_poly <- polygonise(out_ras, rasmin) %>%
dplyr::bind_rows(polygonise(out_ras, q05)) %>%
dplyr::bind_rows(polygonise(out_ras, q25)) %>%
dplyr::bind_rows(polygonise(out_ras, q50)) %>%
dplyr::bind_rows(polygonise(out_ras, q75)) %>%
dplyr::bind_rows(polygonise(out_ras, q95))
p <- ggplot(otter_poly, aes(fill=quant))+
geom_sf(colour=NA) +
scale_fill_viridis_b()+
theme_bw()
p
?write_sf
sf::write_sf(otter_poly, dsn = 'run/otter_poly1819.gpkg')
unique(otter_poly$quant)
as.factor(0.5)
polygonise <- function(ras, thresh){
rasvec <- as.vector(ras)
rasvec <- rasvec[!is.na(rasvec)]
f <- ecdf(rasvec)
perc <- plyr::round_any(f(thresh), 0.05, f = round)
raster::rasterToPolygons(ras, fun=function(x){x>thresh}) %>%
sf::st_as_sf() %>%
sf::st_union() %>%
sf::st_as_sf() %>%
dplyr::mutate(quant = perc) %>%
dplyr::mutate(quantf = as.factor(quant))
}
otter_poly <- polygonise(out_ras, rasmin) %>%
dplyr::bind_rows(polygonise(out_ras, q05)) %>%
dplyr::bind_rows(polygonise(out_ras, q25)) %>%
dplyr::bind_rows(polygonise(out_ras, q50)) %>%
dplyr::bind_rows(polygonise(out_ras, q75)) %>%
dplyr::bind_rows(polygonise(out_ras, q95))
?scale_fill_brewer
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2')+
theme_bw()
p
p <- ggplot(otter_poly, aes(fill=quant))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2')+
theme_bw()
p
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2')+
theme_bw()
p
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2' direction = -1)+
theme_bw()
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2', direction = -1)+
theme_bw()
p
otter_poly <- polygonise(out_ras, rasmin) %>%
# dplyr::bind_rows(polygonise(out_ras, q05)) %>%
dplyr::bind_rows(polygonise(out_ras, q25)) %>%
dplyr::bind_rows(polygonise(out_ras, q50)) %>%
dplyr::bind_rows(polygonise(out_ras, q75)) %>%
dplyr::bind_rows(polygonise(out_ras, q95))
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2', direction = -1)+
theme_bw()
p
otter_poly_simp <- rmapshaper::ms_simplify(otter_poly)
p <- ggplot(otter_poly_simp, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2', direction = -1)+
theme_bw()
p
?rmapshaper::ms_simplify
otter_poly_simp <- rmapshaper::ms_simplify(otter_poly, keep=0.75, method='vis', weighting=0.8, keep_shapes=TRUE, explode = TRUE)
p <- ggplot(otter_poly_simp, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2', direction = -1)+
theme_bw()
p
sf::write_sf(otter_poly, dsn = 'run/otter_poly1819b.gpkg')
sf::write_sf(otter_poly_simp, dsn = 'run/otter_poly1819b.gpkg')
otter_poly_simp <- rmapshaper::ms_simplify(otter_poly, keep=0.5, method='vis', weighting=0.7, keep_shapes=TRUE, explode = TRUE)
sf::write_sf(otter_poly_simp, dsn = 'run/otter_poly1819c.gpkg')
otter_poly
otter_polyb <- sf::st_cast(otter_poly, to='POLYGON')
p <- ggplot(otter_polyb, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Dark2', direction = -1)+
theme_bw()
p
otter_polyb
rownames(otter_polyb)<-NULL
otter_polyb
polygonise <- function(ras, thresh){
rasvec <- as.vector(ras)
rasvec <- rasvec[!is.na(rasvec)]
f <- ecdf(rasvec)
perc <- plyr::round_any(f(thresh), 0.05, f = round)
raster::rasterToPolygons(ras, fun=function(x){x>thresh}) %>%
sf::st_as_sf() %>%
sf::st_union() %>%
sf::st_as_sf() %>%
dplyr::mutate(quant = perc) %>%
dplyr::mutate(quantf = as.factor(quant))
}
kde_to_polgyon <- function(forage_raster){
rasmin <- raster::minValue(forage_raster)
# q05 <- raster::quantile(forage_raster, .05)
q25 <- raster::quantile(forage_raster, .25)
q50 <- raster::quantile(forage_raster, .5)
q75 <- raster::quantile(forage_raster, .75)
q95 <- raster::quantile(forage_raster, .95)
forage_poly <- polygonise(forage_raster, rasmin) %>%
# dplyr::bind_rows(polygonise(forage_raster, q05)) %>%
dplyr::bind_rows(polygonise(forage_raster, q25)) %>%
dplyr::bind_rows(polygonise(forage_raster, q50)) %>%
dplyr::bind_rows(polygonise(forage_raster, q75)) %>%
dplyr::bind_rows(polygonise(forage_raster, q95)) %>%
sf::st_cast(otter_poly, to='POLYGON')
rownames(forage_poly)<-NULL
return(forage_poly)
}
kde_to_polgyon(out_ras)
list('a') + list('b')
c( list('a'), list('b'))
rasmin <- raster::minValue(forage_raster)
raster::minValue(out_ras_
)
raster::minValue(out_ras)
raster::quantile(out_ras, 0)
quant_list <- list(0, .25, .5, .75, .95) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
quant_list
quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
dplyr::bind_rows()%>%
sf::st_cast(., to='POLYGON')
?supressWarnings
kde_to_polgyon <- function(forage_raster){
quant_list <- list(0, .25, .5, .75, .95) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
forage_poly <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
dplyr::bind_rows()%>%
sf::st_cast(., to='POLYGON')
forage_poly <- polygonise(forage_raster, rasmin) %>%
# dplyr::bind_rows(polygonise(forage_raster, q05)) %>%
dplyr::bind_rows(polygonise(forage_raster, q25)) %>%
dplyr::bind_rows(polygonise(forage_raster, q50)) %>%
dplyr::bind_rows(polygonise(forage_raster, q75)) %>%
dplyr::bind_rows(polygonise(forage_raster, q95)) %>%
suppressWarnings(sf::st_cast(otter_poly, to='POLYGON'))
rownames(forage_poly)<-NULL
return(forage_poly)
}
kde_to_polgyon(out_ras)
otter_poly <- kde_to_polgyon(out_ras)
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Set1', direction = -1)+
theme_bw()
p
sf::write_sf(otter_poly, dsn = 'run/otter_poly1819b.gpkg')
kde_to_polgyon <- function(forage_raster, low_thresh = 0, upper_thresh = 0.95){
quant_list <- list(low_thresh, upper_thresh) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
forage_poly <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
dplyr::bind_rows()%>%
sf::st_cast(., to='POLYGON')
#
#   forage_poly <- polygonise(forage_raster, rasmin) %>%
#     # dplyr::bind_rows(polygonise(forage_raster, q05)) %>%
#     dplyr::bind_rows(polygonise(forage_raster, q25)) %>%
#     dplyr::bind_rows(polygonise(forage_raster, q50)) %>%
#     dplyr::bind_rows(polygonise(forage_raster, q75)) %>%
#     dplyr::bind_rows(polygonise(forage_raster, q95)) %>%
#     sf::st_cast(otter_poly, to='POLYGON')
rownames(forage_poly)<-NULL
return(forage_poly)
}
otter_poly <- kde_to_polgyon(out_ras)
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_brewer(palette = 'Set1', direction = -1)+
theme_bw()
p
?sclae_fill_manual
?scale_fill_manual
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour=NA) +
scale_fill_manual(values = c("#F87223", "#23AAF8"))
p
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour='#818486') +
scale_fill_manual(values = c("#F87223", "#23AAF8"))+
theme_bw()
p
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour='#818486', alpha=0.7) +
scale_fill_manual(values = c("#23AAF8", "#F87223"))+
theme_bw()
p
kde_to_polgyon <- function(forage_raster, low_thresh = 0, upper_thresh = 0.95){
quant_list <- list(low_thresh, upper_thresh) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
poly_list <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
purrr::map(., ~ sf::st_cast(., to='POLYGON'))
forage_poly <- sf::st_intersects(poly_list[[1]], poly_list[[2]])
rownames(forage_poly)<-NULL
return(forage_poly)
}
otter_poly <- kde_to_polgyon(out_ras)
otter_poly
?st_intersects
?st_intersection
kde_to_polgyon <- function(forage_raster, low_thresh = 0, upper_thresh = 0.95){
quant_list <- list(low_thresh, upper_thresh) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
poly_list <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
purrr::map(., ~ sf::st_cast(., to='POLYGON'))
forage_poly <- sf::st_intersection(poly_list[[1]], poly_list[[2]])
rownames(forage_poly)<-NULL
return(forage_poly)
}
otter_poly <- kde_to_polgyon(out_ras)
otter_poly
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour='#818486', alpha=0.7) +
scale_fill_manual(values = c("#23AAF8", "#F87223"))+
theme_bw()
p
?row_number()
kde_to_polgyon <- function(forage_raster, low_thresh = 0, upper_thresh = 0.95){
quant_list <- list(low_thresh, upper_thresh) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
poly_list <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .)) %>%
purrr::map(., ~ sf::st_cast(., to='POLYGON'))
# forage_poly <- sf::st_intersection(poly_list[[1]], poly_list[[2]])
forage_poly <- poly_list[[1]] %>%
dplyr::mutate(id = dplyr::row_number() ) %>%
#filter out states that do not have any intersetcions with the points/cities
dplyr::filter( id %in% unlist( st_intersects(poly_list[[2]], poly_list[[1]]) ) )
rownames(forage_poly)<-NULL
return(forage_poly)
}
otter_poly <- kde_to_polgyon(out_ras)
otter_poly
p <- ggplot(otter_poly, aes(fill=quantf))+
geom_sf(colour='#818486', alpha=0.7) +
scale_fill_manual(values = c("#23AAF8", "#F87223"))+
theme_bw()
p
p <- ggplot(otter_poly, aes(fill=id))+
geom_sf(colour='#818486', alpha=0.7)
p
p <- ggplot(otter_poly, aes(fill=as.factor(id)))+
geom_sf(colour='#818486', alpha=0.7)
p
polygonise <- function(ras, thresh){
rasvec <- as.vector(ras)
rasvec <- rasvec[!is.na(rasvec)]
f <- ecdf(rasvec)
perc <- plyr::round_any(f(thresh), 0.05, f = round)
raster::rasterToPolygons(ras, fun=function(x){x>thresh}) %>%
sf::st_as_sf() %>%
sf::st_union() %>%
sf::st_as_sf() %>%
dplyr::mutate(quant = perc) %>%
dplyr::mutate(quantf = as.factor(quant)) %>%
sf::st_cast(., to='POLYGON')
}
kde_to_polgyon <- function(forage_raster, low_thresh = 0, upper_thresh = 0.95){
quant_list <- list(low_thresh, upper_thresh) %>%
purrr::map(., ~ raster::quantile(out_ras, .))
poly_list <- quant_list %>%
purrr::map(., ~ polygonise(out_ras, .))
Yes_upper <- poly_list[[1]] %>%
dplyr::mutate(id = dplyr::row_number() ) %>%
dplyr::filter( id %in% unlist(st_intersects(poly_list[[2]], poly_list[[1]]))) %>%
dplyr::mutate(Upper_Thresh = 'Yes')
No_upper <- poly_list[[1]] %>%
dplyr::mutate(id = dplyr::row_number() ) %>%
dplyr::filter( id %in% unlist(!st_intersects(poly_list[[2]], poly_list[[1]])))%>%
dplyr::mutate(Upper_Thresh = 'No')
forage_poly <- dplyr::bind_rows(Yes_upper, No_upper)
rownames(forage_poly)<-NULL
return(forage_poly)
}
otter_poly <- kde_to_polgyon(out_ras)
otter_poly
p <- ggplot(otter_poly, aes(fill=Upper_Thresh))+
geom_sf(colour='#818486', alpha=0.7) +
scale_fill_manual(values = c("#23AAF8", "#F87223"))+
theme_bw()
p
otter_poly <- kde_to_polgyon(out_ras, low_thresh = 0.2, upper_thresh = 0.8)
p <- ggplot(otter_poly, aes(fill=Upper_Thresh))+
geom_sf(colour='#818486', alpha=0.7) +
scale_fill_manual(values = c("#23AAF8", "#F87223"))+
theme_bw()
p
library(sf)
library(magick)
library(magrittr)
library(tidyverse)
library(osmdata)
library(ggspatial)
devtools::load_all()
# ----- Read Data -------
# load otter catchment
OC_sf <- sf::read_sf('run/data/Otter_Catch_fix.gpkg')
#transform to WGS84
OC_trans <- OC_sf %>%
st_transform(crs = 4326)
# get bounds
box <- OC_trans  %>%
st_bbox()
#extract OSM river lines
Otter_rivers <- opq(bbox = box, memsize = 1073741824) %>%
add_osm_feature(key='waterway') %>%
osmdata_sf() %>%
.$osm_lines %>%
st_intersection(OC_trans) %>%
st_union()%>%
st_transform(crs = 4326) %>%
st_sf() %>%
mutate(river = 'River Network') %>%
st_transform(crs = 27700)
# check data
# ggplot() +
#   layer_spatial(OC_sf) +
#   layer_spatial(Otter_rivers)
# create mask for catchment.
Otter_mask <- OC_sf %>%
st_buffer(2000) %>%
st_bbox()%>%
st_as_sfc %>%
st_as_sf %>%
st_difference(., OC_sf)
ggplot() +
layer_spatial(OC_sf) +
layer_spatial(Otter_rivers)
ggplot() +
layer_spatial(Otter_mask) +
layer_spatial(Otter_rivers)
# ----- Functions ------
fsd_ggplot <- function(.data, p.ext){
plot_title <- pull(.data[1,], 1)[1]
fsd <- forage_density(.data, 'FeedCat', kd_extent = p.ext) %>%
plot_forage_density(., basemap_type = 'osm' ,axes_units = FALSE, guide = FALSE, mask_sf = Otter_mask, river_sf = Otter_rivers) +
labs(subtitle = sprintf('Beaver Foraging Density: %s',plot_title))
}
target_ext <- inflate_bbox(OC_sf, 10)
Otter_kde_list <- RivOtter_FeedSigns %>%
group_by(SurveySeason) %>%
group_split()%>%
purrr::map(., ~fsd_ggplot(., target_ext))
img <- image_graph(630, 891, res = 200)
print(Otter_kde_list)
dev.off()
animation <- image_animate(magick::image_morph(img,  frames = 12), fps = 4, optimize = TRUE)
# dev.off()
# print(animation)
image_write(animation, "run/maps/OtterKdeAnimation2.gif")
devtools::load_all()
devtools::document()
devtools::document()
ROBT_201920 <- RivOtter_FeedSigns %>%
dplyr::filter(SurveySeason == "2019 - 2020")
library(sf)
# library(sp)
# library(raster)
# library(ggspatial)
# library(gridExtra)
library(magick)
library(magrittr)
library(tidyverse)
ROBT_201920 <- RivOtter_FeedSigns %>%
dplyr::filter(SurveySeason == "2019 - 2020")
out_ras <- forage_density(ROBT_201920, 'FeedCat')
?add_osm_feature
?osmdata::add_osm_feature
?osmdata::osmdata_sf()
devtools::load_all()
ROBT_201920 <- RivOtter_FeedSigns %>%
dplyr::filter(SurveySeason == "2019 - 2020")
out_ras <- forage_density(ROBT_201920, 'FeedCat')
is.null(NULL)
devtools::load_all()
ROBT_201920 <- RivOtter_FeedSigns %>%
dplyr::filter(SurveySeason == "2019 - 2020")
out_ras <- forage_density(ROBT_201920, 'FeedCat')
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
Otter_catch <- 'run/data/Otter_Catch_fix.gpkg'
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
devtools::load_all()
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
devtools::load_all()
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
devtools::load_all()
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
?osmdata::opq
devtools::load_all()
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
beaver_forage
devtools::load_all()
beaver_forage <- plot_forage_density(out_ras, catchment = Otter_catch, rivers = TRUE, add_hillshade = TRUE)
beaver_forage
# ----- Functions ------
fsd_ggplot <- function(.data, p.ext){
plot_title <- pull(.data[1,], 1)[1]
fsd <- forage_density(.data, 'FeedCat', kd_extent = p.ext) %>%
plot_forage_density(.,axes_units = FALSE, guide = FALSE,  catchment = OC_sf, rivers = TRUE, add_hillshade = TRUE) +
labs(subtitle = sprintf('Beaver Foraging Density: %s',plot_title))
}
target_ext <- inflate_bbox(OC_sf, 10)
# load otter catchment
OC_sf <- sf::read_sf('run/data/Otter_Catch_fix.gpkg')
library(ggspatial)
# ----- Functions ------
fsd_ggplot <- function(.data, p.ext){
plot_title <- pull(.data[1,], 1)[1]
fsd <- forage_density(.data, 'FeedCat', kd_extent = p.ext) %>%
plot_forage_density(.,axes_units = FALSE, guide = FALSE,  catchment = OC_sf, rivers = TRUE, add_hillshade = TRUE) +
labs(subtitle = sprintf('Beaver Foraging Density: %s',plot_title))
}
target_ext <- inflate_bbox(OC_sf, 10)
Otter_kde_list <- RivOtter_FeedSigns %>%
group_by(SurveySeason) %>%
group_split()%>%
purrr::map(., ~fsd_ggplot(., target_ext))
Otter_kde_list[4]
630*2
891*2
img <- image_graph(1260, 1782, res = 200)
print(Otter_kde_list)
dev.off()
animation <- image_animate(magick::image_morph(img,  frames = 12), fps = 4, optimize = TRUE)
# dev.off()
# print(animation)
image_write(animation, "run/maps/OtterKdeAnimation_bw.gif")
img <- image_graph(1200, 675, res = 96)
print(Otter_kde_list)
dev.off()
animation <- image_animate(magick::image_morph(img,  frames = 10), fps = 5, optimize = TRUE)
# dev.off()
# print(animation)
image_write(animation, "run/maps/Otter_anim_bw_twitter.gif")
?magick::image_graph
devtools::load_all()
devtools::load_all()
Otter_kde_list <- RivOtter_FeedSigns %>%
group_by(SurveySeason) %>%
group_split()%>%
purrr::map(., ~fsd_ggplot(., target_ext)) %>%
animate_maps(., filename = 'run/maps/Otter_anim_test.gif')
Otter_kde_list
devtools::load_all()
# load otter catchment
OC_sf <- 'run/data/Otter_Catch_fix.gpkg'
devtools::document()
Otter_catch <- 'run/data/Otter_Catch_fix.gpkg'
devtools::load_all()
# load otter catchment
OC_sf <- 'run/data/Otter_Catch_fix.gpkg'
# ----- Functions ------
fsd_ggplot <- function(.data, p.ext){
plot_title <- pull(.data[1,], 1)[1]
fsd <- forage_density(.data, 'FeedCat', kd_extent = p.ext) %>%
plot_forage_density(.,axes_units = FALSE, guide = FALSE,  catchment = OC_sf, rivers = TRUE, add_hillshade = TRUE) +
labs(subtitle = sprintf('Beaver Foraging Density: %s',plot_title))
}
target_ext <- inflate_bbox(OC_sf, 10)
target_ext
